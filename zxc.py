import logging
import random
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes

# –¢–æ–∫–µ–Ω —Ç–≤–æ–µ–≥–æ –±–æ—Ç–∞
TOKEN = "8356139072:AAFhiu7mSCb431Ewa8-vnwIPVsLW9l46TyA"

# –°–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
MESSAGES = [
    "–õ–∞–±—É–±—É –ø—Ä–æ–≥–æ–ª–æ–¥–∞–ª—Å—è üêæüç≤",
    "–õ–∞–±—É–±—É —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å üéÆüê∂",
    "–õ–∞–±—É–±—É —Å–∫—É—á–∞–µ—Ç üòø",
    "–õ–∞–±—É–±—É –∑–∞–≥—Ä—É—Å—Ç–∏–ª üíî",
    "–õ–∞–±—É–±—É –∂–¥—ë—Ç —Ç–µ–±—è üêï‚ú®",
    "–õ–∞–±—É–±—É —Ö–æ—á–µ—Ç –æ–±–Ω–∏–º–∞—à–µ–∫ ü§ó"
]

# –í–∫–ª—é—á–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —á–∞—Ç–æ–≤
chat_ids = set()

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_ids.add(update.effective_chat.id)

    greeting = (
        "–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥! üê∂‚ú®\n\n"
        "–Ø ‚Äî –±–æ—Ç –õ–∞–±—É–±—É üíñ\n"
        "–ë—É–¥—É –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å —Ç–µ–±–µ, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–æ–∏–≥—Ä–∞—Ç—å, –ø–æ–∫–æ—Ä–º–∏—Ç—å "
        "–∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ–±–Ω—è—Ç—å –õ–∞–±—É–±—É üêæüíû\n\n"
        "–ù–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫—É üéÆ –∏ –∑–∞—Ö–æ–¥–∏ –≤ –∏–≥—Ä—É!"
    )

    keyboard = InlineKeyboardMarkup(
        [[InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å", url="https://labubub-4mj5.vercel.app")]]
    )

    await update.message.reply_text(greeting, reply_markup=keyboard, parse_mode="Markdown")

# –û—Ç–ø–∏—Å–∫–∞ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
async def stop(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_chat.id in chat_ids:
        chat_ids.remove(update.effective_chat.id)
        await update.message.reply_text("‚ùå –¢—ã –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –õ–∞–±—É–±—É.")
    else:
        await update.message.reply_text("‚ÑπÔ∏è –¢—ã –µ—â—ë –Ω–µ –±—ã–ª –ø–æ–¥–ø–∏—Å–∞–Ω.")

# –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞
async def notifier(app: Application):
    while True:
        if chat_ids:
            msg = random.choice(MESSAGES)
            keyboard = InlineKeyboardMarkup(
                [[InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å", url="https://labubub-4mj5.vercel.app")]]
            )
            for chat_id in list(chat_ids):
                try:
                    await app.bot.send_message(chat_id, msg, reply_markup=keyboard)
                except Exception as e:
                    logging.error(e)

        await asyncio.sleep(1800)  # –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç

# –ó–∞–ø—É—Å–∫
def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("stop", stop))

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω
    app.job_queue.run_once(lambda ctx: asyncio.create_task(notifier(app)), 1)

    app.run_polling()

if __name__ == "__main__":
    main()
